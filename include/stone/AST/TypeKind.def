#ifndef TYPE
#define TYPE(ID, Parent)
#endif

#ifndef TYPE_SPECIFIER
#define TYPE_SPECIFIER(ID, Parent) TYPE(ID, Parent)
#endif

#ifndef ALWAYS_CANONICAL_TYPE
#define ALWAYS_CANONICAL_TYPE(ID, Parent) TYPE_SPECIFIER(ID, Parent)
#endif

#ifndef BUILTIN_TYPE
#define BUILTIN_TYPE(ID, Parent) ALWAYS_CANONICAL_TYPE(ID, Parent)
#endif

#ifndef SIGNED_BUILTIN_TYPE
#define SIGNED_BUILTIN_TYPE(ID, Parent) BUILTIN_TYPE(ID, Parent)
#endif

#ifndef UNSIGNED_BUILTIN_TYPE
#define UNSIGNED_BUILTIN_TYPE(ID, Parent) BUILTIN_TYPE(ID, Parent)
#endif

#ifndef ABSTRACT_TYPE
#define ABSTRACT_TYPE(ID, Parent)
#endif

#ifndef ABSTRACT_SUGARED_TYPE
#define ABSTRACT_SUGARED_TYPE(ID, Parent) ABSTRACT_TYPE(ID, Parent)
#endif

#ifndef TYPE_RANGE
#define TYPE_RANGE(ID, First, Last) /* Specify range metadata */
#endif

#ifndef LAST_TYPE
#define LAST_TYPE(ID)
#endif

// Definitions for all types begin here
ABSTRACT_TYPE(Builtin, Type)
  ABSTRACT_TYPE(Number, BuiltinType)
    SIGNED_BUILTIN_TYPE(Int, NumberType)
    SIGNED_BUILTIN_TYPE(Int8, NumberType)
    SIGNED_BUILTIN_TYPE(Int16, NumberType)
    SIGNED_BUILTIN_TYPE(Int32, NumberType)
    SIGNED_BUILTIN_TYPE(Int64, NumberType)
    SIGNED_BUILTIN_TYPE(Int128, NumberType)
    UNSIGNED_BUILTIN_TYPE(UInt, NumberType)
    UNSIGNED_BUILTIN_TYPE(UInt8, NumberType)
    UNSIGNED_BUILTIN_TYPE(UInt16, NumberType)
    UNSIGNED_BUILTIN_TYPE(UInt32, NumberType)
    UNSIGNED_BUILTIN_TYPE(UInt64, NumberType)
    UNSIGNED_BUILTIN_TYPE(UInt128, NumberType)
    BUILTIN_TYPE(Float, NumberType)
    BUILTIN_TYPE(Float16, NumberType)
    BUILTIN_TYPE(Float32, NumberType)
    BUILTIN_TYPE(Float64, NumberType)
    BUILTIN_TYPE(Float128, NumberType)
    BUILTIN_TYPE(Complex32, NumberType)
    BUILTIN_TYPE(Complex64, NumberType)
    BUILTIN_TYPE(Imaginary32, NumberType)
    BUILTIN_TYPE(Imaginary64, NumberType)
  UNSIGNED_BUILTIN_TYPE(Bool, BuiltinType)
  UNSIGNED_BUILTIN_TYPE(Char, BuiltinType)
  UNSIGNED_BUILTIN_TYPE(Char8, BuiltinType)
  UNSIGNED_BUILTIN_TYPE(Char16, BuiltinType)
  UNSIGNED_BUILTIN_TYPE(Char32, BuiltinType)
  BUILTIN_TYPE(Null, BuiltinType)
  BUILTIN_TYPE(Void, BuiltinType)
  BUILTIN_TYPE(String, BuiltinType)
TYPE_RANGE(Builtin, Int, String)

ABSTRACT_TYPE(Deduced, Type)
  TYPE_SPECIFIER(Auto, DeducedType)
TYPE_RANGE(Deduced, Auto, Auto)

ABSTRACT_TYPE(Function, Type)
  TYPE_SPECIFIER(Fun, FunctionType)
TYPE_RANGE(Function, Fun, Fun)


ABSTRACT_TYPE(Access, Type)
ABSTRACT_TYPE(Pointer, AccessType)
  TYPE_SPECIFIER(Raw, PointerType)            
  // TYPE_SPECIFIER(MemberPointer, AbstractPointerType)  
  // TYPE_SPECIFIER(Own, AbstractPointerType)            
  // TYPE_SPECIFIER(OwnPtr, AbstractPointerType)         
  TYPE_SPECIFIER(Move, AbstractPointerType)           
  // TYPE_RANGE(AbstractPointer, Ptr, Move)
ABSTRACT_TYPE(Reference, AccessType)
  TYPE_SPECIFIER(Ref, ReferenceType)          
  TYPE_RANGE(Reference, Ref, Ref)
TYPE_RANGE(Access, Raw, Ref)


ABSTRACT_TYPE(Nominal, Type)
  TYPE_SPECIFIER(Enum, NominalType)
  TYPE_SPECIFIER(Struct, NominalType)
  TYPE_SPECIFIER(Class, NominalType)
  TYPE_SPECIFIER(Interface, NominalType)
TYPE_RANGE(Nominal, Enum, Interface)
LAST_TYPE(Interface)

ABSTRACT_SUGARED_TYPE(Sugar, Type)
  TYPE_SPECIFIER(Alias, SugarType)
TYPE_RANGE(Sugar, Alias, Alias)

// Cleanup
#undef TYPE
#undef TYPE_SPECIFIER
#undef ALWAYS_CANONICAL_TYPE
#undef BUILTIN_TYPE
#undef SIGNED_BUILTIN_TYPE
#undef UNSIGNED_BUILTIN_TYPE
#undef ABSTRACT_TYPE
#undef ABSTRACT_SUGARED_TYPE
#undef TYPE_RANGE
#undef LAST_TYPE
