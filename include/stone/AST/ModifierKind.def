#ifndef MODIFIER
#define MODIFIER(ID, Parent)
#endif


#ifndef DECL_MODIFIER
#define DECL_MODIFIER(ID, Parent) MODIFIER(ID, Parent)
#endif

#ifndef STORAGE_DECL_MODIFIER
#define STORAGE_DECL_MODIFIER(ID, Parent) DECL_MODIFIER(ID, Parent)
#endif

#ifndef VISIBILITY_DECL_MODIFIER
#define VISIBILITY_DECL_MODIFIER(ID, Parent) DECL_MODIFIER(ID, Parent)
#endif


#ifndef TYPE_MODIFIER
#define TYPE_MODIFIER(ID, Parent) MODIFIER(ID, Parent)
#endif


/// Most metaprograms do not care about abstract types, so the default
/// is to ignore them.
#ifndef ABSTRACT_MODIFIER
#define ABSTRACT_MODIFIER(ID, Parent)
#endif


/// A convenience for determining the range of types.  These will always
/// appear immediately after the last member.
#ifndef MODIFIER_RANGE
#define MODIFIER_RANGE(ID, First, Last)
#endif

#ifndef LAST_MODIFIER
#define LAST_MODIFIER(ID)
#endif

ABSTRACT_MODIFIER(Decl, Modifier)
  ABSTRACT_MODIFIER(Storage,       DeclModifier)
    DECL_MODIFIER(Static,      StorageDeclModifier)
    DECL_MODIFIER(Extern,      StorageDeclModifier)
 ABSTRACT_MODIFIER(Visibility,       DeclModifier)
    DECL_MODIFIER(Public,      VisibilityDeclModifier)
    DECL_MODIFIER(Protected,      VisibilityDeclModifier)
    DECL_MODIFIER(Private,      VisibilityDeclModifier)
ABSTRACT_MODIFIER(Type, Modifier)
  TYPE_MODIFIER(Const,      TypeModifier)
  TYPE_MODIFIER(Pure,      TypeModifier)
  TYPE_MODIFIER(Volatile,      TypeModifier)
  ABSTRACT_MODIFIER(Access,       TypeModifier)
    TYPE_MODIFIER(Pointer,      AccessTypeModifier)
    TYPE_MODIFIER(Reference,      AccessTypeModifier)

LAST_MODIFIER(Extern)

#undef MODIFIER
#undef DECL_MODIFIER
#undef DECL_MODIFIER
#undef STORAGE_DECL_MODIFIER
#undef TYPE_MODIFIER
#undef LAST_MODIFIER