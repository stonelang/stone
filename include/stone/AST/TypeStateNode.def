
/// TYPESTATE(Id, Parent)
///   The TypeState's enumerator value is TypeStateKind::Id.  The TypeState's
///   class name is Id##TypeState, and the name of its base class is Parent.
#ifndef TYPESTATE
# error Included TypeStateNode.def without defining TYPESTATE!
#endif

/// An abstract node is an abstract base class in the hierarchy;
/// it is never a most-derived type, and it does not have an enumerator in
/// TypeStateKind.
///
/// Most metaprograms do not care about abstract classes, so the default
/// is to ignore them.
#ifndef ABSTRACT_TYPESTATE
#define ABSTRACT_TYPESTATE(Id, Parent)
#endif

/// SPECIFIER_TYPESTATE(Id, Parent)
///
/// A specific TypeState that's a child of SpecifierTypeState.
#ifndef SPECIFIER_TYPESTATE
#define SPECIFIER_TYPESTATE TYPESTATE
#endif

#ifndef LAST_TYPESTATE
#define LAST_TYPESTATE(Id)
#endif
 

ABSTRACT_TYPESTATE(DeclRef, TypeState)
  ABSTRACT_TYPESTATE(Identifier, DeclRefTypeState)
    TYPESTATE(SimpleIdentifier, IdentifierTypeState)
    //TYPESTATE(TemplateIdentifier, IdentifierTypeState)
  TYPESTATE(Member, DeclRefTypeState)

TYPESTATE(Function, TypeState)
// TYPESTATE(Array, TypeState)
// TYPESTATE(Dictionary, TypeState)
// TYPESTATE(Optional, TypeState)
// TYPESTATE(ImplicitlyUnwrappedOptional, TypeState)
// TYPESTATE(Tuple, TypeState)
// TYPESTATE(Composition, TypeState)
// TYPESTATE(Metatype, TypeState)
// TYPESTATE(Vararg, TypeState)
// TYPESTATE(PackExpansion, TypeState)
// TYPESTATE(Protocol, TypeState)
// TYPESTATE(OpaqueReturn, TypeState)
// TYPESTATE(NamedOpaqueReturn, TypeState)
// TYPESTATE(Existential, TypeState)
// TYPESTATE(Pack, TypeState)
// TYPESTATE(PackElement, TypeState)
// TYPESTATE(Placeholder, TypeState)
// ABSTRACT_TYPESTATE(Specifier, TypeState)
//   SPECIFIER_TYPESTATE(Ownership, SpecifierTypeState)
//   SPECIFIER_TYPESTATE(Isolated, SpecifierTypeState)
//   SPECIFIER_TYPESTATE(CompileTimeConst, SpecifierTypeState)
// TYPESTATE(Fixed, TypeState)
// TYPESTATE(SILBox, TypeState)
// TYPESTATE(Self, TypeState)
LAST_TYPESTATE(Function)

#undef SPECIFIER_TYPESTATE
#undef ABSTRACT_TYPESTATE
#undef TYPESTATE
#undef LAST_TYPESTATE
