
/// TYPERESULT(Id, Parent)
///   The TypeResult's enumerator value is TypeResultKind::Id.  The TypeResult's
///   class name is Id##TypeResult, and the name of its base class is Parent.
#ifndef TYPERESULT
# error Included TypeResultNodes.def without defining TYPERESULT!
#endif

/// An abstract node is an abstract base class in the hierarchy;
/// it is never a most-derived type, and it does not have an enumerator in
/// TypeResultKind.
///
/// Most metaprograms do not care about abstract classes, so the default
/// is to ignore them.
#ifndef ABSTRACT_TYPERESULT
#define ABSTRACT_TYPERESULT(Id, Parent)
#endif

/// SPECIFIER_TYPERESULT(Id, Parent)
///
/// A specific TypeResult that's a child of SpecifierTypeResult.
#ifndef SPECIFIER_TYPERESULT
#define SPECIFIER_TYPERESULT TYPERESULT
#endif

#ifndef LAST_TYPERESULT
#define LAST_TYPERESULT(Id)
#endif
 

ABSTRACT_TYPERESULT(DeclRef, TypeResult)
  ABSTRACT_TYPERESULT(Identifier, DeclRefTypeResult)
    TYPERESULT(SimpleIdentifier, IdentifierTypeResult)
    //TYPERESULT(GenericIdentifier, IdentifierTypeResult)
  TYPERESULT(Member, DeclRefTypeResult)

TYPERESULT(Function, TypeResult)
// TYPERESULT(Array, TypeResult)
// TYPERESULT(Dictionary, TypeResult)
// TYPERESULT(Optional, TypeResult)
// TYPERESULT(ImplicitlyUnwrappedOptional, TypeResult)
// TYPERESULT(Tuple, TypeResult)
// TYPERESULT(Composition, TypeResult)
// TYPERESULT(Metatype, TypeResult)
// TYPERESULT(Vararg, TypeResult)
// TYPERESULT(PackExpansion, TypeResult)
// TYPERESULT(Protocol, TypeResult)
// TYPERESULT(OpaqueReturn, TypeResult)
// TYPERESULT(NamedOpaqueReturn, TypeResult)
// TYPERESULT(Existential, TypeResult)
// TYPERESULT(Pack, TypeResult)
// TYPERESULT(PackElement, TypeResult)
// TYPERESULT(Placeholder, TypeResult)
// ABSTRACT_TYPERESULT(Specifier, TypeResult)
//   SPECIFIER_TYPERESULT(Ownership, SpecifierTypeResult)
//   SPECIFIER_TYPERESULT(Isolated, SpecifierTypeResult)
//   SPECIFIER_TYPERESULT(CompileTimeConst, SpecifierTypeResult)
// TYPERESULT(Fixed, TypeResult)
// TYPERESULT(SILBox, TypeResult)
// TYPERESULT(Self, TypeResult)
LAST_TYPERESULT(Function)

#undef SPECIFIER_TYPERESULT
#undef ABSTRACT_TYPERESULT
#undef TYPERESULT
#undef LAST_TYPERESULT
